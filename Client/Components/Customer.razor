@using CleanDotnetBlazor.Shared
@inject HttpClient Http

<div class="modal @ModalClass" tabindex="-1" role="dialog" style="display:@ModalDisplay">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" style="width:100%">Add/Edit customer</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close" @onclick="() => Close()">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
                @if (customer != null)
                {
                    <EditForm Model="customer" OnValidSubmit="Save">
                        <div class="modal-body">
                            <ServerValidator @ref="serverValidator" />
                            <ValidationSummary />

                            <input type="hidden" id="id">
                            <div class="form-group">
                                <label for="first-name" class="col-form-label">First name:</label>
                                <input type="text" class="form-control" id="first-name" required @bind="customer.FirstName" />
                            </div>
                            <div class="form-group">
                                <label for="last-name" class="col-form-label">Last name:</label>
                                <input type="text" class="form-control" id="last-name" required @bind="customer.LastName" />
                            </div>
                            <div class="form-group">
                                <label for="date-of-birth" class="col-form-label">Date of Birth:</label>
                                <input type="date" class="form-control" id="date-of-birth" required @bind="customer.DateOfBirth" />
                            </div>
                            <div class="form-group">
                                <label for="phone-number" class="col-form-label">Phone Number:</label>
                                <input type="tel" class="form-control" id="phone-number" required @bind="customer.PhoneNumber" />
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="submit" class="btn btn-primary">Save changes</button>
                            <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="() => Close()">Close</button>
                        </div>

                    </EditForm>
                }
        </div>
    </div>
</div>

@if (ShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    private CustomerDto customer;
    private ServerValidator serverValidator;

    [Parameter]
    public EventCallback OnSaved { get; set; }
    public Guid Guid = Guid.NewGuid();
    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    public async void Open(int id)
    {
        if (id != 0) customer = await Http.GetFromJsonAsync<CustomerDto>("/api/Customers/" + id);
        else customer = new CustomerDto()
        {
            FirstName = "",
            LastName = "",
            DateOfBirth = DateOnly.FromDateTime(DateTime.Now),
            PhoneNumber = ""
        };
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    protected async Task Save()
    {
        var response = await Http.PostAsJsonAsync("/api/Customers", customer);
        if (response.StatusCode == System.Net.HttpStatusCode.Created)
        {
            await OnSaved.InvokeAsync();
            Close();
        }
        else
        {
            serverValidator.Validate(response, customer);
        }
    }
}