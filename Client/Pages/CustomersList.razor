@page "/customers-list"
@using CleanDotnetBlazor.Shared
@inject HttpClient Http

<PageTitle>Customers</PageTitle>

<h1>Customers</h1>

@if (customers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <Client.Components.Customer @ref="Customer" OnSaved="@load"></Client.Components.Customer>
    <button id="btn-add" type="button" class="btn btn-primary" @onclick="() => Customer.Open(0)">
        <i class="oi oi-plus"></i>
        Add customer
    </button>
    <table class="table">
        <thead>
            <tr>
                <th>FirstName</th>
                <th>LastName</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customers)
            {
                <tr>
                    <td>@customer.FirstName</td>
                    <td>@customer.LastName</td>
                    <td>
                        <button class="btn btn-outline-primary" @onclick="()=> Delete(customer.Id)">
                            <i class="oi oi-trash"></i>
                        </button>
                        <button class="btn btn-outline-primary" @onclick="() => Customer.Open(customer.Id)">
                            <i class="oi oi-pencil"></i>
                        </button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}


@code {
    private List<CustomerBriefDto>? customers;
    private Components.Customer Customer { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await load();
    }

    public async Task load()
    {
        customers = await Http.GetFromJsonAsync<List<CustomerBriefDto>>("/api/Customers");
    }

    protected async Task Delete(int id)
    {
        await Http.DeleteAsync("/api/Customers/" + id);
        customers = customers!.Where(customer => customer.Id != id).ToList();
    }

}
